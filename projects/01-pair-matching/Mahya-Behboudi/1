const selectors = {
    boardContainer: document.querySelector('.board-container'),
    board: document.querySelector('.board'),
    win: document.querySelector('.win')
}


    flippedCards: 0,
    totalFlips: 0,


const randommize = a => {
    const array = [...a]

    for (let i = array.length - 1; i > 0; i--) {
        const random = Math.floor(Math.random() * (i + 1))
        const original = array[i]

        array[i] = array[random]
        array[random] = original
    }

    return array;
}
// pick the random of 
const pickRandom = (a, items) => {
    const array = [...a]
    const randomPicks = []

    for (let i = 0; i < items; i++) {
        const randomIndex = Math.floor(Math.random() * array.length)
        
        randomPicks.push(array[randomIndex])
        array.splice(randomIndex, 1)
    }

    return randomPicks
}
 // create the board game (  column & row of game board  )
const generateGame = () => {

    const dimensions = selectors.board.getAttribute('data-dimension');
	// console.log(dimensions);

	// define numbers (card items )
    const emojis = [...Array(dimensions * dimensions).keys()];
	// console.log(emojis);
    const picks = pickRandom(emojis, (dimensions * dimensions) / 2) 
    const items = randommize([...picks, ...picks])
    const cards = `
        <div class="board" style="grid-template-columns: repeat(${dimensions}, auto)">
            ${items.map(item => `
                <div class="card">
                    <div class="card-front"></div>
                    <div class="card-back">${item}</div>
                </div>
            `).join('')}
       </div>
    `
    
    const parser = new DOMParser().parseFromString(cards, 'text/html')

    selectors.board.replaceWith(parser.querySelector('.board'))
}


const flipBackCards = () => {
    document.querySelectorAll('.card:not(.matched)').forEach(card => {
        card.classList.remove('flipped')
    })

    flippedCards = 0
}

const flipCard = card => {
    flippedCards++
    state.totalFlips++


    if (state.flippedCards <= 2) {
        card.classList.add('flipped')
    }

    if (flippedCards === 2) {
        const flippedCards = document.querySelectorAll('.flipped:not(.matched)')

        if (flippedCards[0].innerText === flippedCards[1].innerText) {
            flippedCards[0].classList.add('matched')
            flippedCards[1].classList.add('matched')
        }

        setTimeout(() => {
            flipBackCards()
        }, 1000)
    }

    // If there are no more cards that we can flip, we won the game
    if (!document.querySelectorAll('.card:not(.flipped)').length) {
        setTimeout(() => {
            selectors.boardContainer.classList.add('flipped')
            selectors.win.innerHTML = `
                <span class="win-text">
                 Congrats :)))<br />
                </span>
            `

            clearInterval(state.loop)
        }, 1000)
    }
}

const attachEventListeners = () => {
    document.addEventListener('click', event => {
        const eventTarget = event.target
        const eventParent = eventTarget.parentElement

        if (eventTarget.className.includes('card') && !eventParent.className.includes('flipped')) {
            flipCard(eventParent)
        }
    })
}

generateGame()
attachEventListeners()
